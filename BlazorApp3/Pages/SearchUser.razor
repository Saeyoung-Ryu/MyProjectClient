@page "/SearchUser"
@using BlazorApp3.Common.Type
@using BlazorApp3.Common.Manager
@using Enum
@using RiotSharp
@using RiotSharp.Misc
@using System.Text

<PageTitle>유저 자랭 정보 검색</PageTitle>

<h1>유저 자랭 정보 검색</h1>
<hr />
<br>

@if (isLoading)
{
    <MatProgressCircle Indeterminate="true" Size="MatProgressCircleSize.Large" />
}
else
{
    <table id="Border-Solid" class="table table-border table-hover w-auto">
        <thead>
        <tr class="table-primary">
            <th>닉네임</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            <td><input type="text" size="20" @bind="@searchNickName"> <button type="submit" class="btn btn-info" @onclick="@SearchUserAsyncBtn">검색</button></td>
        </tr>
        </tbody>
    </table>
    
    <br>
    <br>
    
    @if (puuid != String.Empty)
    {
        <MatAccordion Multi="true">
            @foreach (var summonerName in eachTeamMateChampWRDic.Keys)
            {
                <MatExpansionPanel Style="width: 500px">
                    <MatExpansionPanelSummary>
                        <MatExpansionPanelHeader> <p3>@summonerName</p3> @(GetWinnRate(summonerName))%</MatExpansionPanelHeader>
                    </MatExpansionPanelSummary>
                    <MatExpansionPanelDetails>
                        @foreach (var stringValue in GetWinnRateStringListComparedByChamp(eachTeamMateChampWRDic[summonerName]))
                        {
                            <tr>
                                <td>@stringValue</td>
                            </tr>
                        }
                    </MatExpansionPanelDetails>
                </MatExpansionPanel>
            }
        </MatAccordion>
    }

}

@code
{
    public Dictionary<string, Dictionary<string, Dictionary<string, Dictionary<WinLoseType, int>>>> eachTeamMateChampWRDic = new Dictionary<string, Dictionary<string, Dictionary<string, Dictionary<WinLoseType, int>>>>();
    public Dictionary<string, Dictionary<WinLoseType, int>> eachTeamMateWRDic = new Dictionary<string, Dictionary<WinLoseType, int>>();
    
    bool isLoading = false;
    
    RiotApi riotInstance = RiotApi.GetDevelopmentInstance(MyProjectInfoConfig.Instance.APIKey);
    
    string searchNickName = string.Empty;
    string puuid = string.Empty;
}

@code
{
    private async Task SearchUserAsyncBtn()
    {
        isLoading = true;
        
        var summoner = await riotInstance.Summoner.GetSummonerByNameAsync(Region.Kr, searchNickName);

        if (summoner != null)
            puuid = summoner.Puuid;
        else
            return;

        var dic = await UIManager.GetWinRateEachTeamMateChampionAsync(MyProjectInfoConfig.Instance.APIKey, puuid, 20);

        eachTeamMateChampWRDic = dic.EachTeamMateChampWRDic;
        eachTeamMateWRDic = dic.EachTeamMateWRDic;
        
        isLoading = false;
    }
}

@code
{
    public string GetWinnRate(string summonerName)
    {
        int totalGame = eachTeamMateWRDic[summonerName][WinLoseType.Lose] + eachTeamMateWRDic[summonerName][WinLoseType.Win];
        int winGame = eachTeamMateWRDic[summonerName][WinLoseType.Win];

        Console.WriteLine($"totalGame : {totalGame}");
        Console.WriteLine($"winGame : {winGame}");
        if(winGame == 0)
            return "0.0";
        
        double winRate = (double)winGame / totalGame * 100;
        string wrStringFormat = winRate.ToString("0.0");

        Console.WriteLine($"wrStringFormat : {wrStringFormat}");
        
        return wrStringFormat;
    }

    public List<string> GetWinnRateStringListComparedByChamp(Dictionary<string, Dictionary<string, Dictionary<WinLoseType, int>>> dictionary)
    {
        List<string> list = new List<string>();

        foreach (var myChampName in dictionary.Keys)
        {
            foreach (var otherChampName in dictionary[myChampName].Keys)
            {
                int totalWinGame = dictionary[myChampName][otherChampName][WinLoseType.Win];
                int totalLoseGame = dictionary[myChampName][otherChampName][WinLoseType.Lose];
                
                list.Add($"{myChampName} {otherChampName} : {totalWinGame}승 {totalLoseGame}패");
            }
        }

        return list;
    }
}
